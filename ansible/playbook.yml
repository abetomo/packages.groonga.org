- hosts: package-servers
  sudo: yes
  tasks:
    # Base
    - name: Upgrade packages
      apt:
        update_cache=yes
        cache_valid_time=3600
        upgrade=safe
    - name: Install base packages
      apt: name={{ item }}
      with_items:
        - apt-listchanges
        - vim
        - zsh
        - lv
    - name: Use VIM as the default editor
      command: update-alternatives --set editor /usr/bin/vim.basic
    - name: Use e-mail for apt-listchanges
      copy:
        src=files/listchanges.conf
        dest=/etc/apt/listchanges.conf

    # User
    - name: Create "packages" user
      user: name=packages
    - name: Create directories
      file:
        path=~packages/{{ item }}
        state=directory
        owner=packages
        group=packages
      with_items:
        - bin/
        - public/
    - name: Put ~packages/.forward
      copy:
        content="packages@groonga.org"
        dest=~packages/.forward
        owner=packages
        group=packages
    - name: Create ~packages/.ssh/
      file:
        path=~packages/.ssh
        state=directory
        owner=packages
        group=packages
        mode=0700
    - name: Put ~packages/.ssh/authorized_keys
      copy:
        src=files/authorized_keys
        dest=~packages/.ssh/authorized_keys
        owner=packages
        group=packages
        mode=0600

    # Apache
    - name: Install Apache
      apt: name=apache2
    - name: Put Apache configuration
      copy:
        src=files/packages.groonga.org.conf
        dest=/etc/apache2/sites-available/packages.groonga.org.conf
    - name: Put footer file
      copy:
        src=files/footer.html
        dest=/home/packages/public/footer.html
        owner=packages
        group=packages
    - name: Enable our Apache configuration
      command: a2ensite packages.groonga.org
    - name: Disable default Apache configuration
      command: a2dissite 000-default
      notify:
        - Restart Apache

    # Postfix
    - name: Install Postfix
      apt: name=postfix
    - name: Set /etc/aliases
      copy:
        src=files/aliases
        dest=/etc/aliases
      notify:
        - Update /etc/aliases
    - name: Set /etc/mailname
      copy:
        content="packages.groonga.org"
        dest=/etc/mailname
    - name: Put Postfix configuration
      copy:
        src=files/main.cf
        dest=/etc/postfix/main.cf
      notify:
        - Restart Postfix

    # Nightly package builder
    - name: Install packages for nightly package builder
      apt: name={{ item }}
      with_items:
        - git
        - zsh
        - autoconf
        - pkg-config
        - libtool
        - gcc
        - g++
        - make
        - cmake
        - bison
        - python-sphinx
        - gettext
        - ruby
        - libncurses5-dev
        - curl
        - zip
        - virtualbox
        - vagrant
        - rpm
    - name: Install nightly package builder
      copy:
        src=files/create-snapshot-package.sh
        dest=/home/packages/bin/
        owner=packages
        group=packages
        mode=0755
    - name: Install cron
      cron:
        special_time: daily
        name: Create nightly package
        job: ~packages/bin/create-snapshot-package.sh
        user: packages

    # # Droonga
    # - name: Enable Groonga APT repository
    #   apt_repository: repo=ppa:groonga/ppa
    # - name: Install Droonga dependency libraries
    #   apt: name={{ item }}
    #   with_items:
    #     - libgroonga-dev
    #     - groonga-tokenizer-mecab
    #     - groonga-bin
    #     - ruby-dev
    #     - nodejs
    #     - nodejs-legacy
    #     - npm
    # - name: Create "droonga" group
    #   group:
    #     name=droonga

    # # Droonga: droonga-engine
    # - name: Create "droonga-engine" user
    #   user:
    #     name=droonga-engine
    #     group=droonga
    # - name: Create directories
    #   file:
    #     path=~droonga-engine/{{ item }}/
    #     state=directory
    #     owner=droonga-engine
    #     group=droonga
    #   with_items:
    #     - droonga1
    #     - droonga2
    #     - droonga3
    # - name: Put ~droonga-engine/.forward
    #   copy:
    #     content="packages@groonga.org"
    #     dest=~droonga-engine/.forward
    #     owner=droonga-engine
    #     group=droonga
    # - name: Update droonga-engine repository
    #   git:
    #     repo=https://github.com/droonga/droonga-engine.git
    #     dest=~droonga-engine/droonga-engine/
    # - name: Install droonga-engine
    #   shell: |-
    #     rm -rf *.gem; \
    #     gem build droonga-engine.gemspec && \
    #     gem install droonga-engine-*.gem
    #   args:
    #     chdir: ~droonga-engine/droonga-engine
    # - name: Configure droonga-engine
    #   shell: sudo -u droonga-engine -H droonga-engine-catalog-generate --hosts=127.0.1.1,127.0.2.1,127.0.3.1 --output catalog.json
    #   args:
    #     chdir: ~droonga-engine/{{ item }}
    #   with_items:
    #     - droonga1
    #     - droonga2
    #     - droonga3
    #   notify:
    #     - Restart droonga-engine

    # # Droonga: droonga-http-server
    # - name: Create "droonga-http-server" user
    #   user:
    #     name=droonga-http-server
    #     group=droonga
    # - name: Create directories
    #   file:
    #     path=~droonga-http-server/droonga/
    #     state=directory
    #     owner=droonga-http-server
    #     group=droonga
    # - name: Put ~droonga-http-server/.forward
    #   copy:
    #     content="packages@groonga.org"
    #     dest=~droonga-http-server/.forward
    #     owner=droonga-http-server
    #     group=droonga
    # - name: Install droonga-http-server
    #   shell: |-
    #     npm install -g \
    #       express \
    #       droonga/express-droonga \
    #       droonga/droonga-http-server && \
    #     rm -rf /usr/local/lib/node_modules/express-droonga/node_modules/express
    # - name: Configure droonga-http-server
    #   shell: |-
    #     sudo -u droonga-http-server -H \
    #       droonga-http-server-configure \
    #         --quiet \
    #         --droonga-engine-host-name 127.0.1.1 \
    #         --receive-host-name 127.0.1.1
    #   args:
    #     chdir: ~droonga-http-server/droonga
    #   notify:
    #     - Restart droonga-http-server

    # # Fluentd
    # - name: Install GPG key of Fluentd APT repository
    #   apt_key:
    #     url=http://packages.treasuredata.com/GPG-KEY-td-agent
    # - name: Install Fluentd APT repository
    #   apt_repository:
    #     repo="deb [arch=amd64] http://packages.treasuredata.com/2/ubuntu/trusty/ trusty contrib"
    # - name: Install Fluentd
    #   apt: name={{ item }}
    #   with_items:
    #     - td-agent
    # - name: Install Fluentd plugins
    #   gem:
    #     executable=/usr/sbin/td-agent-gem
    #     name={{ item }}
    #     state=latest
    #     user_install=no
    #   with_items:
    #     - fluent-plugin-record-reformer
    #     - fluent-plugin-groonga
    #   notify:
    #     - Restart Fluentd
    # - name: Add "td-agent" user to "adm" groups
    #   user:
    #     name=td-agent
    #     groups=adm
    # - name: Create directories
    #   file:
    #     path={{ item }}
    #     state=directory
    #     owner=td-agent
    #     group=td-agent
    #   with_items:
    #     - /var/spool/td-agent/
    #     - /var/spool/td-agent/buffer/
    # - name: Put fluentd.conf
    #   copy:
    #     src=files/fluentd/fluentd.conf
    #     dest=/etc/td-agent/td-agent.conf
    #   notify:
    #     - Restart Fluentd

  handlers:
    - name: Restart Apache
      service: name=apache2 state=restarted
    - name: Update /etc/aliases
      command: postalias /etc/aliases
    - name: Restart Postfix
      service: name=postfix state=restarted

    - name: Restart droonga-engine
      shell: |-
        if [ -f droonga-engine.pid ]; then
          sudo -u droonga-engine -H kill $(cat droonga-engine.pid)
          sleep 3
        fi
        sudo -u droonga-engine -H \
          droonga-engine \
            --log-file droonga-engine.log \
            --pid-file droonga-engine.pid \
            --host 127.0.{{ item }}.1 \
            --daemon
      args:
        chdir: ~droonga-engine/droonga{{ item }}
      with_items:
        - 1
        - 2
        - 3
    - name: Restart droonga-http-server
      shell: |-
        if [ -f droonga-http-server.pid ]; then
          sudo -u droonga-http-server -H kill $(cat droonga-http-server.pid)
          sleep 3
        fi
        sudo -u droonga-http-server -H \
          droonga-http-server \
            --pid-file droonga-http-server.pid \
            --enable-trust-proxy \
            --host 127.0.1.1 \
            --daemon
      args:
        chdir: ~droonga-http-server/droonga

    - name: Restart Fluentd
      service: name=td-agent state=restarted
